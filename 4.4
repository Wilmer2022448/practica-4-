#define tonePin  8
#define BUTTON  9
void setup() {
  pinMode(BUTTON, INPUT_PULLUP);
  pinMode(tonePin, OUTPUT);
}
void loop() {
  if(digitalRead(BUTTON) == LOW)
  {
    PlayMusic();
  }
  noTone(tonePin);
}
void PlayMusic() {
    tone(tonePin, 587, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 698, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1174, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 587, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 698, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1174, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 314.0625);
    delay(348.958333333);
    delay(26.0416666667);
    tone(tonePin, 1396, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1396, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1046, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 880, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 880, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 587, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 698, 51.5625);
    delay(57.2916666667);
    delay(67.7083333333);
    tone(tonePin, 783, 70.3125);
    delay(78.125);
    delay(46.875);
    tone(tonePin, 880, 501.5625);
    delay(557.291666667);
    delay(192.708333333);
    tone(tonePin, 880, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 587, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 698, 51.5625);
    delay(57.2916666667);
    delay(67.7083333333);
    tone(tonePin, 783, 70.3125);
    delay(78.125);
    delay(46.875);
    tone(tonePin, 659, 557.8125);
    delay(619.791666667);
    delay(130.208333333);
    tone(tonePin, 587, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 698, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1174, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 587, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 698, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1174, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 314.0625);
    delay(348.958333333);
    delay(26.0416666667);
    tone(tonePin, 1396, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1396, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1046, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 880, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 880, 201.5625);
    delay(223.958333333);
    delay(26.0416666667);
    tone(tonePin, 587, 182.8125);
    delay(203.125);
    delay(46.875);
    tone(tonePin, 698, 70.3125);
    delay(78.125);
    delay(46.875);
    tone(tonePin, 783, 70.3125);
    delay(78.125);
    delay(46.875);
    tone(tonePin, 880, 370.3125);
    delay(411.458333333);
    delay(88.5416666667);
    tone(tonePin, 880, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 587, 895.3125);
    delay(994.791666667);
    delay(21505.2083333);
    tone(tonePin, 587, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 698, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1174, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 587, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 698, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1174, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 314.0625);
    delay(348.958333333);
    delay(26.0416666667);
    tone(tonePin, 1396, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1396, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1046, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 880, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 880, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 587, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 698, 51.5625);
    delay(57.2916666667);
    delay(67.7083333333);
    tone(tonePin, 783, 70.3125);
    delay(78.125);
    delay(46.875);
    tone(tonePin, 880, 501.5625);
    delay(557.291666667);
    delay(192.708333333);
    tone(tonePin, 880, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 587, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 698, 51.5625);
    delay(57.2916666667);
    delay(67.7083333333);
    tone(tonePin, 783, 70.3125);
    delay(78.125);
    delay(46.875);
    tone(tonePin, 659, 557.8125);
    delay(619.791666667);
    delay(130.208333333);
    tone(tonePin, 587, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 698, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1174, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 587, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 698, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1174, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 314.0625);
    delay(348.958333333);
    delay(26.0416666667);
    tone(tonePin, 1396, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1396, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1318, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 1046, 107.8125);
    delay(119.791666667);
    delay(5.20833333333);
    tone(tonePin, 880, 445.3125);
    delay(494.791666667);
    delay(5.20833333333);
    tone(tonePin, 880, 201.5625);
    delay(223.958333333);
    delay(26.0416666667);
    tone(tonePin, 587, 182.8125);
    delay(203.125);
    delay(46.875);
    tone(tonePin, 698, 70.3125);
    delay(78.125);
    delay(46.875);
    tone(tonePin, 783, 70.3125);
    delay(78.125);
    delay(46.875);
    tone(tonePin, 880, 370.3125);
    delay(411.458333333);
    delay(88.5416666667);
    tone(tonePin, 880, 164.0625);
    delay(182.291666667);
    delay(67.7083333333);
    tone(tonePin, 587, 895.3125);
    delay(994.791666667);

}
